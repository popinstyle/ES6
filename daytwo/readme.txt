1.函数或者变量均可以使用解构赋值;
2.函数例如:
	function add([x,y]){
		return x + y;
	}
	add([1,2]); //3
3.变量例如:
	let [foo,[[bar],baz]] = [1,[[2],3]]
	foo //1    bar //2    baz //3
4.变量解构的用途:
	(1).交换变量的值  [x,y] = [y,x]
	(2).函数定义时候的参数:可以不用call或者apply的方法，将参数的值和变量的值相对应
	(3).提取JSON数据:可以快速提取JSON中数组的数据
5.遍历Map解构:
	(1).通常的js对对象字面量是一个字符串加上一个值,必须是一个键值对，使用了字符串作为键值对
	如:var x = {"name":"mmm"};
	(2).Map结构中的"键"的范围不局限于字符串，还可以是对象,数字等等。
	(3).方法:size,set(设置一个键值对),get,has,delete,clear.
	(4).map的遍历方法:key()返回键名的遍历;values()返回键值的遍历;entires()返回所有成员的遍历